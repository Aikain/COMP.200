@book{JamesFreeman2020PA2,
    author = {James Freeman and Fabio Alessandro Locati and Daniel Oh},
    abstract = {Leverage the power of Ansible to gain complete control over your systems and automate application deploymentKey FeaturesUse Ansible 2.9 to automate and control your infrastructure
Delve into advanced functionality such as plugins and custom modules in Ansible
Automate and orchestrate major cloud platforms such as OpenStack, AWS, and Azure using AnsibleBook DescriptionAnsible enables you to automate software provisioning, configuration management, and application roll-outs, and can be used as a deployment and orchestration tool. While Ansible provides simple yet powerful features to automate multi-layer environments using agentless communication, it can also solve other critical IT challenges, such as ensuring continuous integration and continuous deployment (CI/CD) with zero downtime.
In this book, you'll work with Ansible 2.9 and learn to solve complex issues quickly with the help of task-oriented scenarios. You'll start by installing and configuring Ansible on Linux and macOS to automate monotonous and repetitive IT tasks and get to grips with concepts such as playbooks, inventories, and network modules. As you progress, you'll gain insight into the YAML syntax and learn how to port between Ansible versions. In addition to this, you'll also understand how Ansible enables you to orchestrate multi-layer environments such as networks, containers, and the cloud.
By the end of this Ansible book, you'll be well - versed in writing playbooks and other related Ansible code to overcome just about all of your IT challenges, from infrastructure-as-code provisioning to application deployments, and even handling the mundane day-to-day maintenance tasks that take up so much valuable time.What you will learnBecome familiar with the fundamentals of the Ansible framework
Set up role-based variables and dependencies
Avoid common mistakes and pitfalls when writing automation code in Ansible
Extend Ansible by developing your own modules and plugins
Contribute to the Ansible project by submitting your own code
Follow best practices for working with cloud environment inventories
Troubleshoot issues triggered during Ansible playbook runsWho this book is forIf you are a DevOps engineer, administrator, or any IT professional looking to automate IT tasks using Ansible, this book is for you. Prior knowledge of Ansible is not necessary.},
    isbn = {9781789807462},
    language = {eng},
    publisher = {Packt Publishing},
    title = {Practical Ansible 2},
    year = {2020},
}

@article{RahmanAkond2021SSiA,
    author = {Rahman, Akond and Rahman, Md Rayhanur and Parnin, Chris and Williams, Laurie},
    abstract = {Context: Security smells are recurring coding patterns that are indicative of security weakness and require further inspection. As infrastructure as code (IaC) scripts, such as Ansible and Chef scripts, are used to provision cloud-based servers and systems at scale, security smells in IaC scripts could be used to enable malicious users to exploit vulnerabilities in the provisioned systems. Goal: The goal of this article is to help practitioners avoid insecure coding practices while developing infrastructure as code scripts through an empirical study of security smells in Ansible and Chef scripts. Methodology: We conduct a replication study where we apply qualitative analysis with 1,956 IaC scripts to identify security smells for IaC scripts written in two languages: Ansible and Chef. We construct a static analysis tool called Security Linter for Ansible and Chef scripts (SLAC) to automatically identify security smells in 50,323 scripts collected from 813 open source software repositories. We also submit bug reports for 1,000 randomly selected smell occurrences. Results: We identify two security smells not reported in prior work: missing default in case statement and no integrity check. By applying SLAC we identify 46,600 occurrences of security smells that include 7,849 hard-coded passwords. We observe agreement for 65 of the responded 94 bug reports, which suggests the relevance of security smells for Ansible and Chef scripts amongst practitioners. Conclusion: We observe security smells to be prevalent in Ansible and Chef scripts, similarly to that of the Puppet scripts. We recommend practitioners to rigorously inspect the presence of the identified security smells in Ansible and Chef scripts using (i) code review, and (ii) static analysis tools.},
    issn = {1049-331X},
    journal = {ACM transactions on software engineering and methodology},
    language = {eng},
    number = {1},
    pages = {1-31},
    title = {Security Smells in Ansible and Chef Scripts: A Replication Study},
    volume = {30},
    year = {2021},
}

@book{KiefMorris2020IaC2,
    author = {Kief Morris},
    abstract = {Six years ago, Infrastructure as Code was a new concept. Today, as even banks and other conservative organizations plan moves to the cloud, development teams for companies worldwide are attempting to build large infrastructure codebases. With this practical book, Kief Morris of ThoughtWorks shows you how to effectively use principles, practices, and patterns pioneered by DevOps teams to manage cloud-age infrastructure.Ideal for system administrators, infrastructure engineers, software developers, team leads, and architects, this updated edition demonstrates how you can exploit cloud and automation technology to make changes easily, safely, quickly, and responsibly. You'll learn how to define everything as code and apply software design and engineering practices to build your system from small, loosely coupled pieces.This book covers:Foundations:
Use Infrastructure as Code to drive continuous change and raise the bar of operational quality, using tools and technologies to build cloud-based platforms
Working with infrastructure stacks:
Learn how to define, provision, test, and continuously deliver changes to infrastructure resources
Working with servers and other platforms:
Use patterns to design provisioning and configuration of servers and clusters
Working with large systems and teams:
Learn workflows, governance, and architectural patterns to create and manage infrastructure elements},
    isbn = {9781098114664},
    language = {eng},
    publisher = {O'Reilly Media, Inc},
    title = {Infrastructure as Code, 2nd Edition},
    year = {2020},
}

@misc{alma9911217298805973,
    isbn = {1-80107-693-6},
    language = {eng},
    publisher = {Packt Publishing},
    title = {Dive Into Ansible - From Beginner to Expert in Ansible},
    year = {2021},
}

@book{JamesFreeman2020HEAo,
    author = {James Freeman},
    abstract = {Achieve enterprise automation in your Linux environment with this comprehensive guideKey FeaturesAutomate your Linux infrastructure with the help of practical use cases and real-world scenarios
Learn to plan, build, manage, and customize OS releases in your environment
Enhance the scalability and efficiency of your infrastructure with advanced Linux system administration conceptsBook DescriptionAutomation is paramount if you want to run Linux in your enterprise effectively. It helps you minimize costs by reducing manual operations, ensuring compliance across data centers, and accelerating deployments for your cloud infrastructures.
Complete with detailed explanations, practical examples, and self-assessment questions, this book will teach you how to manage your Linux estate and leverage Ansible to achieve effective levels of automation. You'll learn important concepts on standard operating environments that lend themselves to automation, and then build on this knowledge by applying Ansible to achieve standardization throughout your Linux environments.
By the end of this Linux automation book, you'll be able to build, deploy, and manage an entire estate of Linux servers with higher reliability and lower overheads than ever before.
What you will learnPerform large-scale automation of Linux environments in an enterprise
Overcome the common challenges and pitfalls of extensive automation
Define the business processes needed to support a large-scale Linux environment
Get well-versed with the most effective and reliable patch management strategies
Automate a range of tasks from simple user account changes to complex security policy enforcement
Learn best practices and procedures to make your Linux environment automatableWho this book is forThis book is for anyone who has a Linux environment to design, implement, and maintain. Open source professionals including infrastructure architects and system administrators will find this book useful. You're expected to have experience in implementing and maintaining Linux servers along with knowledge of building, patching, and maintaining server infrastructure. Although not necessary, knowledge of Ansible or other automation technologies will be beneficial.},
    isbn = {9781789131611},
    language = {eng},
    publisher = {Packt Publishing},
    title = {Hands-On Enterprise Automation on Linux},
    year = {2020},
}

@book{GauravAgarwal2021MDP,
    author = {Gaurav Agarwal},
    abstract = {Enhance DevOps workflows by integrating the functionalities of Docker, Kubernetes, Spinnaker, Ansible, Terraform, Flux CD, CaaS, and more with the help of practical examples and expert tipsKey FeaturesGet up and running with containerization-as-a-service and infrastructure automation in the public cloudLearn container security techniques and secret management with Cloud KMS, Anchore Grype, and Grafeas KritisLeverage the combination of DevOps, GitOps, and automation to continuously ship a package of softwareBook DescriptionContainers have entirely changed how developers and end-users see applications as a whole. With this book, you'll learn all about containers, their architecture and benefits, and how to implement them within your development lifecycle.You'll discover how you can transition from the traditional world of virtual machines and adopt modern ways of using DevOps to ship a package of software continuously. Starting with a quick refresher on the core concepts of containers, you'll move on to study the architectural concepts to implement modern ways of application development. You'll cover topics around Docker, Kubernetes, Ansible, Terraform, Packer, and other similar tools that will help you to build a base. As you advance, the book covers the core elements of cloud integration (AWS ECS, GKE, and other CaaS services), continuous integration, and continuous delivery (GitHub actions, Jenkins, and Spinnaker) to help you understand the essence of container management and delivery. The later sections of the book will take you through container pipeline security and GitOps (Flux CD and Terraform).By the end of this DevOps book, you'll have learned best practices for automating your development lifecycle and making the most of containers, infrastructure automation, and CaaS, and be ready to develop applications using modern tools and techniques.What you will learnBecome well-versed with AWS ECS, Google Cloud Run, and KnativeDiscover how to build and manage secure Docker images efficientlyUnderstand continuous integration with Jenkins on Kubernetes and GitHub actionsGet to grips with using Spinnaker for continuous deployment/deliveryManage immutable infrastructure on the cloud with Packer, Terraform, and AnsibleExplore the world of GitOps with GitHub actions, Terraform, and Flux CDWho this book is forIf you are a software engineer, system administrator, or operations engineer looking to step into the world of DevOps within public cloud platforms, this book is for you. Existing DevOps engineers will also find this book useful as it covers best practices, tips, and tricks to implement DevOps with a cloud-native mindset. Although no containerization experience is necessary, a basic understanding of the software development life cycle and delivery will help you get the mos},
    isbn = {1800562381},
    langid = {english},
    publisher = {Packt Publishing},
    title = {Modern DevOps Practices},
    year = {2021},
}


@online{AnsibleDocs,
    title = {Ansible Documentation},
    date = {2022-02-06},
    url = {https://docs.ansible.com/},
    urldate = {2022-02-06},
    langid = {english}
}
